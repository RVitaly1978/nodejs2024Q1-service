generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

model User {
  id        String    @id @default(uuid())
  login     String    @unique
  password  String
  version   Int       @default(1)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
}

model Artist {
  id      String    @id @default(uuid())
  name    String
  grammy  Boolean

  albums          Album[]
  tracks          Track[]
  favoriteArtists FavoriteArtist[]
}

model Album {
  id        String   @id @default(uuid())
  name      String
  year      Int

  artistId  String?
  artist    Artist?  @relation(fields: [artistId], references: [id], onDelete: SetNull)

  tracks          Track[]
  favoriteAlbums  FavoriteAlbum[]
}

model Track {
  id        String   @id @default(uuid())
  name      String
  duration  Int

  artistId  String?
  artist    Artist?  @relation(fields: [artistId], references: [id], onDelete: SetNull)

  albumId   String?
  album     Album?   @relation(fields: [albumId], references: [id], onDelete: SetNull)

  favoriteTracks  FavoriteTrack[]
}

model FavoriteArtist {
  artistId  String
  artist    Artist  @relation(fields: [artistId], references: [id], onDelete: Cascade)

  @@id([artistId])
}

model FavoriteAlbum {
  albumId   String
  album     Album   @relation(fields: [albumId], references: [id], onDelete: Cascade)

  @@id([albumId])
}

model FavoriteTrack {
  trackId   String
  track     Track   @relation(fields: [trackId], references: [id], onDelete: Cascade)

  @@id([trackId])
}
