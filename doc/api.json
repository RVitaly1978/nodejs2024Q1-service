{
  "openapi": "3.0.0",
  "paths": {
    "/user": {
      "get": {
        "operationId": "UserController_getAllUsers",
        "summary": "Get all users",
        "description": "Gets all users",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "User"
        ]
      },
      "post": {
        "operationId": "UserController_create",
        "summary": "Create user",
        "description": "Creates a new user",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. **body** does not contain required fields"
          },
          "403": {
            "description": "A user with the requested login already exists."
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/user/{id}": {
      "get": {
        "operationId": "UserController_getUserById",
        "summary": "Get single user by id",
        "description": "Get single user by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Param **id** is invalid (not uuid)"
          },
          "404": {
            "description": "User not found."
          }
        },
        "tags": [
          "User"
        ]
      },
      "put": {
        "operationId": "UserController_update",
        "summary": "Update a user's password",
        "description": "Updates a user's password by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Param **id** is invalid (not uuid)"
          },
          "403": {
            "description": "Password is not correct."
          },
          "404": {
            "description": "User not found."
          }
        },
        "tags": [
          "User"
        ]
      },
      "delete": {
        "operationId": "UserController_remove",
        "summary": "Delete user",
        "description": "Deletes user by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "Bad request. Param **id** is invalid (not uuid)"
          },
          "404": {
            "description": "User not found."
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/artist": {
      "get": {
        "operationId": "ArtistController_getAllArtists",
        "summary": "Get all artists",
        "description": "Gets all artists",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Artist"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Artist"
        ]
      },
      "post": {
        "operationId": "ArtistController_create",
        "summary": "Add new artist",
        "description": "Add new artist",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateArtistDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Artist"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. **body** does not contain required fields"
          }
        },
        "tags": [
          "Artist"
        ]
      }
    },
    "/artist/{id}": {
      "get": {
        "operationId": "ArtistController_getArtistById",
        "summary": "Get single artist by id",
        "description": "Get single artist by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Artist"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Param **id** is invalid (not uuid)"
          },
          "404": {
            "description": "Artist not found."
          }
        },
        "tags": [
          "Artist"
        ]
      },
      "put": {
        "operationId": "ArtistController_update",
        "summary": "Update artist information",
        "description": "Update artist information by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateArtistDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Artist"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Param **id** is invalid (not uuid)"
          },
          "404": {
            "description": "Artist not found."
          }
        },
        "tags": [
          "Artist"
        ]
      },
      "delete": {
        "operationId": "ArtistController_remove",
        "summary": "Delete artist",
        "description": "Delete artist from library",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "Bad request. Param **id** is invalid (not uuid)"
          },
          "404": {
            "description": "Artist not found."
          }
        },
        "tags": [
          "Artist"
        ]
      }
    },
    "/track": {
      "get": {
        "operationId": "TrackController_getAllTracks",
        "summary": "Get tracks list",
        "description": "Gets all library tracks list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Track"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Track"
        ]
      },
      "post": {
        "operationId": "TrackController_create",
        "summary": "Add new track",
        "description": "Add new track information",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTrackDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          },
          "400": {
            "description": "Bad request. **body** does not contain required fields"
          }
        },
        "tags": [
          "Track"
        ]
      }
    },
    "/track/{id}": {
      "get": {
        "operationId": "TrackController_getTrackById",
        "summary": "Get single track by id",
        "description": "Get single track by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Track"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Param **id** is invalid (not uuid)"
          },
          "404": {
            "description": "Track not found."
          }
        },
        "tags": [
          "Track"
        ]
      },
      "put": {
        "operationId": "TrackController_update",
        "summary": "Update track information",
        "description": "Update library track information by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTrackDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Track"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Param **id** is invalid (not uuid)"
          },
          "404": {
            "description": "Track not found."
          }
        },
        "tags": [
          "Track"
        ]
      },
      "delete": {
        "operationId": "TrackController_remove",
        "summary": "Delete track",
        "description": "Delete track from library",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "Bad request. Param **id** is invalid (not uuid)"
          },
          "404": {
            "description": "Track not found."
          }
        },
        "tags": [
          "Track"
        ]
      }
    },
    "/album": {
      "get": {
        "operationId": "AlbumController_getAllAlbums",
        "summary": "Get albums list",
        "description": "Gets all library albums list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Album"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Album"
        ]
      },
      "post": {
        "operationId": "AlbumController_create",
        "summary": "Add new album",
        "description": "Add new album information",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAlbumDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          },
          "400": {
            "description": "Bad request. **body** does not contain required fields"
          }
        },
        "tags": [
          "Album"
        ]
      }
    },
    "/album/{id}": {
      "get": {
        "operationId": "AlbumController_getAlbumById",
        "summary": "Get single album by id",
        "description": "Gets single album by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Album"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Param **id** is invalid (not uuid)"
          },
          "404": {
            "description": "Album not found."
          }
        },
        "tags": [
          "Album"
        ]
      },
      "put": {
        "operationId": "AlbumController_update",
        "summary": "Update album information",
        "description": "Update library album information by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAlbumDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Album"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Param **id** is invalid (not uuid)"
          },
          "404": {
            "description": "Album not found."
          }
        },
        "tags": [
          "Album"
        ]
      },
      "delete": {
        "operationId": "AlbumController_remove",
        "summary": "Delete album",
        "description": "Delete album from library",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "Bad request. Param **id** is invalid (not uuid)"
          },
          "404": {
            "description": "Album not found."
          }
        },
        "tags": [
          "Album"
        ]
      }
    },
    "/favs": {
      "get": {
        "operationId": "FavoritesController_getAllFavorites",
        "summary": "Get all favorites",
        "description": "Gets all favorites artists, albums and tracks",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FavoritesResponse"
                }
              }
            }
          }
        },
        "tags": [
          "Favorites"
        ]
      }
    },
    "/favs/track/{id}": {
      "post": {
        "operationId": "FavoritesController_addTrack",
        "summary": "Add track to the favorites",
        "description": "Add track to the favorites",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          },
          "400": {
            "description": "Bad request. Param **id** is invalid (not uuid)"
          },
          "422": {
            "description": "Track not found."
          }
        },
        "tags": [
          "Favorites"
        ]
      },
      "delete": {
        "operationId": "FavoritesController_removeTrack",
        "summary": "Delete track from favorites",
        "description": "Delete track from favorites",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "Bad request. Param **id** is invalid (not uuid)"
          },
          "404": {
            "description": "Track not in favorites."
          }
        },
        "tags": [
          "Favorites"
        ]
      }
    },
    "/favs/album/{id}": {
      "post": {
        "operationId": "FavoritesController_addAlbum",
        "summary": "Add album to the favorites",
        "description": "Add album to the favorites",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          },
          "400": {
            "description": "Bad request. Param **id** is invalid (not uuid)"
          },
          "422": {
            "description": "Album not found."
          }
        },
        "tags": [
          "Favorites"
        ]
      },
      "delete": {
        "operationId": "FavoritesController_removeAlbum",
        "summary": "Delete album from favorites",
        "description": "Delete album from favorites",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "Bad request. Param **id** is invalid (not uuid)"
          },
          "404": {
            "description": "Album not in favorites."
          }
        },
        "tags": [
          "Favorites"
        ]
      }
    },
    "/favs/artist/{id}": {
      "post": {
        "operationId": "FavoritesController_addArtist",
        "summary": "Add artist to the favorites",
        "description": "Add artist to the favorites",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          },
          "400": {
            "description": "Bad request. Param **id** is invalid (not uuid)"
          },
          "422": {
            "description": "Artist not found."
          }
        },
        "tags": [
          "Favorites"
        ]
      },
      "delete": {
        "operationId": "FavoritesController_removeArtist",
        "summary": "Delete artist from favorites",
        "description": "Delete artist from favorites",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "Bad request. Param **id** is invalid (not uuid)"
          },
          "404": {
            "description": "Artist not in favorites."
          }
        },
        "tags": [
          "Favorites"
        ]
      }
    }
  },
  "info": {
    "title": "Home Library Service",
    "description": "Home music library service",
    "version": "1.0.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "login": {
            "type": "string",
            "example": "TestUser"
          },
          "version": {
            "type": "number",
            "example": 1,
            "description": "increments on update"
          },
          "createdAt": {
            "type": "number",
            "example": 1655000000,
            "description": "timestamp of creation"
          },
          "updatedAt": {
            "type": "number",
            "example": 1655000000,
            "description": "timestamp of last update"
          }
        },
        "required": [
          "id",
          "login",
          "version",
          "createdAt",
          "updatedAt"
        ]
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "login": {
            "type": "string",
            "description": "The user's login"
          },
          "password": {
            "type": "string",
            "description": "The user's password"
          }
        },
        "required": [
          "login",
          "password"
        ]
      },
      "UpdatePasswordDto": {
        "type": "object",
        "properties": {
          "oldPassword": {
            "type": "string",
            "description": "The user's old password"
          },
          "newPassword": {
            "type": "string",
            "description": "The user's new password"
          }
        },
        "required": [
          "oldPassword",
          "newPassword"
        ]
      },
      "Artist": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "example": "Freddie Mercury"
          },
          "grammy": {
            "type": "boolean",
            "example": false
          }
        },
        "required": [
          "id",
          "name",
          "grammy"
        ]
      },
      "CreateArtistDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "grammy": {
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "grammy"
        ]
      },
      "UpdateArtistDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "grammy": {
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "grammy"
        ]
      },
      "Track": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "example": "The Show Must Go On"
          },
          "artistId": {
            "type": "string",
            "nullable": true,
            "format": "uuid",
            "description": "refers to Artist"
          },
          "albumId": {
            "type": "string",
            "nullable": true,
            "format": "uuid",
            "description": "refers to Album"
          },
          "duration": {
            "type": "number",
            "minimum": 1,
            "example": 262,
            "description": "In seconds"
          }
        },
        "required": [
          "id",
          "name",
          "artistId",
          "albumId",
          "duration"
        ]
      },
      "CreateTrackDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "artistId": {
            "type": "string",
            "nullable": true
          },
          "albumId": {
            "type": "string",
            "nullable": true
          },
          "duration": {
            "type": "number",
            "minimum": 1
          }
        },
        "required": [
          "name",
          "artistId",
          "albumId",
          "duration"
        ]
      },
      "UpdateTrackDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "artistId": {
            "type": "string",
            "nullable": true
          },
          "albumId": {
            "type": "string",
            "nullable": true
          },
          "duration": {
            "type": "number",
            "minimum": 1
          }
        },
        "required": [
          "name",
          "artistId",
          "albumId",
          "duration"
        ]
      },
      "Album": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "example": "Innuendo"
          },
          "year": {
            "type": "number",
            "minimum": 1,
            "example": 1991
          },
          "artistId": {
            "type": "string",
            "nullable": true,
            "format": "uuid",
            "description": "refers to Artist"
          }
        },
        "required": [
          "id",
          "name",
          "year",
          "artistId"
        ]
      },
      "CreateAlbumDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "year": {
            "type": "number",
            "minimum": 1
          },
          "artistId": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "name",
          "year",
          "artistId"
        ]
      },
      "UpdateAlbumDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "year": {
            "type": "number",
            "minimum": 1
          },
          "artistId": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "name",
          "year",
          "artistId"
        ]
      },
      "FavoritesResponse": {
        "type": "object",
        "properties": {
          "artists": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Artist"
            }
          },
          "albums": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Album"
            }
          },
          "tracks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Track"
            }
          }
        },
        "required": [
          "artists",
          "albums",
          "tracks"
        ]
      }
    }
  }
}
